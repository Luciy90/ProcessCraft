// –ú–æ–¥—É–ª—å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç–∏ - —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏

class AnalyticsModule {
    constructor(options = {}) {
        this.moduleId = options.moduleId || 'analytics';
        this.meta = options.meta || {};
        this.loader = options.loader || null;
        
        this.db = null;
        
        console.log(`[${this.moduleId}] –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –º–æ–¥—É–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω`);
    }

    async init() {
        try {
            console.log(`[${this.moduleId}] –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥—É–ª—è`);
            
            await this.initDatabase();
            this.render();
            this.setupEventListeners();
            
            console.log(`[${this.moduleId}] –ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω`);
        } catch (error) {
            console.error(`[${this.moduleId}] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:`, error);
            throw error;
        }
    }

    async initDatabase() {
        try {
            if (window.Database) {
                this.db = new window.Database();
            } else {
                this.db = {
                    getAnalytics: () => Promise.resolve({}),
                    getReports: () => Promise.resolve([])
                };
            }
            console.log(`[${this.moduleId}] –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞`);
        } catch (error) {
            console.warn(`[${this.moduleId}] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î:`, error);
            this.db = {
                getAnalytics: () => Promise.resolve({}),
                getReports: () => Promise.resolve([])
            };
        }
    }

    render() {
        const moduleElement = document.getElementById('analytics-module');
        if (!moduleElement) {
            console.error(`[${this.moduleId}] –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –º–æ–¥—É–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω`);
            return;
        }

        moduleElement.innerHTML = `
            <div class="module-header">
                <h1>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç—å</h1>
                <div class="module-actions">
                    <button id="create-report-btn" class="btn btn-primary">
                        <i class="icon">üìà</i> –°–æ–∑–¥–∞—Ç—å –æ—Ç—á—ë—Ç
                    </button>
                    <button id="export-analytics-btn" class="btn btn-secondary">
                        <i class="icon">üìä</i> –≠–∫—Å–ø–æ—Ä—Ç
                    </button>
                </div>
            </div>
            <div class="module-content">
                <div class="rounded-xl border border-white/10 bg-neutral-900/40 p-4">
                    <h3 class="text-lg font-medium text-white mb-4">–ú–æ–¥—É–ª—å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏</h3>
                    <div class="text-white/60">
                        –ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏!
                        <br><br>
                        –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥–ª—è:
                        <ul class="list-disc list-inside mt-2 space-y-1">
                            <li>–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –ø–æ —Ü–µ—Ö–∞–º –∏ –æ—Ç–¥–µ–ª–∞–º</li>
                            <li>–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–æ–≤</li>
                            <li>–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è</li>
                            <li>–ì–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–æ–≤ –∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤</li>
                        </ul>
                    </div>
                </div>
            </div>
        `;
        
        console.log(`[${this.moduleId}] UI –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω`);
    }

    setupEventListeners() {
        const createReportBtn = document.getElementById('create-report-btn');
        if (createReportBtn) {
            createReportBtn.addEventListener('click', () => this.createReport());
        }
        
        const exportBtn = document.getElementById('export-analytics-btn');
        if (exportBtn) {
            exportBtn.addEventListener('click', () => this.exportAnalytics());
        }
        
        console.log(`[${this.moduleId}] –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã`);
    }

    createReport() {
        console.log(`[${this.moduleId}] –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞`);
        if (window.app && typeof window.app.showMessage === 'function') {
            window.app.showMessage('–û—Ç—á—ë—Ç –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –ø–æ–∑–∂–µ', 'info');
        }
    }

    exportAnalytics() {
        console.log(`[${this.moduleId}] –≠–∫—Å–ø–æ—Ä—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏`);
        if (window.app && typeof window.app.showMessage === 'function') {
            window.app.showMessage('–≠–∫—Å–ø–æ—Ä—Ç –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –ø–æ–∑–∂–µ', 'info');
        }
    }

    async destroy() {
        try {
            console.log(`[${this.moduleId}] –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –º–æ–¥—É–ª—è`);
            this.db = null;
            console.log(`[${this.moduleId}] –ú–æ–¥—É–ª—å —É–Ω–∏—á—Ç–æ–∂–µ–Ω`);
        } catch (error) {
            console.error(`[${this.moduleId}] –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏ –º–æ–¥—É–ª—è:`, error);
        }
    }

    static get meta() {
        return {
            moduleId: 'analytics',
            moduleName: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á—ë—Ç—ã',
            version: '1.0.0',
            description: '–ú–æ–¥—É–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–æ–≤',
            dependencies: ['database'],
            author: 'ProcessCraft Team',
            enabled: true
        };
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –º–æ–¥—É–ª—è –¥–ª—è ES6 import
export default AnalyticsModule;

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
window.AnalyticsModule = AnalyticsModule;



