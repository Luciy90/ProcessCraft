// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É
// –°–æ–¥–µ—Ä–∂–∏—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞

/**
 * –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤—Ö–æ–¥–∞
 * @param {Object} app –≠–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
export function openLoginModal(app) {
    const cfg = window.UI_CONFIG;
    const t = cfg?.texts?.auth || {};
    const html = `
    <!-- From Uiverse.io by gharsh11032000 -->
    <div class="form-container">
      <form id="login-form" class="form">
        <div class="form-group">
          <label for="login-username">${t.login?.label || '–õ–æ–≥–∏–Ω'}</label>
          <input
            type="text"
            id="login-username"
            name="username"
            placeholder="${t.login?.placeholder || '–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω'}"
            autocomplete="username"
            required
          />
          <div id="login-error" class="field-error">
            ${t.errors?.login?.not_found || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω'}
          </div>
        </div>
        <div class="form-group">
          <label for="login-password">${t.password?.label || '–ü–∞—Ä–æ–ª—å'}</label>
          <input
            type="password"
            id="login-password"
            name="password"
            placeholder="${t.password?.placeholder || '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å'}"
            autocomplete="current-password"
            required
          />
          <div id="password-error" class="field-error"></div>
        </div>
        <div id="auth-error" class="auth-error">
          ${t.errors?.general?.auth_failed || '–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å'}
        </div>
        <div class="form-actions">
          <button class="form-submit-btn" type="submit">${t.buttons?.login || '–í–æ–π—Ç–∏'}</button>
          <button type="button" id="forgot-password-btn" class="forgot-password-btn">${t.buttons?.forgot_password || '–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?'}</button>
        </div>
      </form>
    </div>`;
  app.showModal(html);

  // Robustly attach submit handler: try direct binding first, fallback to delegation on modal container.
  const modalContent = document.getElementById('modal-content');
  const attachHandler = (formEl) => {
    if (!formEl) return;
    // Prevent duplicate handlers
    if (formEl.__loginHandlerAttached) return;
    formEl.__loginHandlerAttached = true;

    const handleSubmit = async (e) => {
      e.preventDefault();
      const username = document.getElementById('login-username').value.trim();
      const password = document.getElementById('login-password').value;

      // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –æ—à–∏–±–æ–∫
      app.clearValidationErrors();

      const submitBtn = formEl.querySelector('button[type="submit"]');
      const originalSubmitText = submitBtn ? submitBtn.textContent : '';
      const cfg = window.UI_CONFIG;
      const authTexts = cfg?.texts?.auth?.messages || {};

      // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ–ª–µ–π)
      const preliminaryValidation = app.validateAuthCredentials(username, password);

      if (preliminaryValidation.hasErrors) {
        app.displayValidationErrors(preliminaryValidation);
        return;
      }

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
      if (submitBtn) {
        submitBtn.disabled = true;
        submitBtn.classList.add('btn-loading');
        submitBtn.textContent = authTexts.loading || '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Ö–æ–¥...';
      }

      try {
        const authResult = await window.UserStore.login(username, password);

        if (authResult?.ok) {
          // –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
          app.closeModal();
          app.updateUserInterface().catch(console.warn);
          app.openProfilePage();
          app.showMessage(authTexts.success || '–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É', 'success');

          // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
          if (app.handleAuthStateChange) {
            app.handleAuthStateChange(true);
          }

          // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –≤–æ—à–µ–¥—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          if (app.applyAccessRules) {
            app.applyAccessRules(app);
          }

          // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
          setTimeout(() => {
            window.location.reload();
          }, 500);
        } else {
          // –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - –≤–∞–ª–∏–¥–∞—Ü–∏—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–∞
          const validationResult = app.validateAuthCredentials(username, password, authResult);
          app.displayValidationErrors(validationResult);

          console.warn('Auth failed:', {
            username: username,
            error: authResult?.error,
            validationResult: validationResult
          });
        }
      } catch (error) {
        console.error('Login error:', error);

        const networkValidation = {
          errors: {},
          auth_error: cfg?.texts?.auth?.errors?.general?.network_error || '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ',
          hasErrors: true
        };

        app.displayValidationErrors(networkValidation);
      } finally {
        if (submitBtn) {
          submitBtn.disabled = false;
          submitBtn.classList.remove('btn-loading');
          submitBtn.textContent = originalSubmitText;
        }

        app.validateUIState();
      }
    };

    formEl.addEventListener('submit', handleSubmit);
  };

  // Try immediate direct binding
  const form = document.getElementById('login-form');
  if (form) {
    attachHandler(form);
  } else if (modalContent) {
    // Delegate: listen for submit events bubbling from forms inside modalContent
    modalContent.addEventListener('submit', (e) => {
      // Ensure it's the login form
      const targetForm = e.target && e.target.id === 'login-form' ? e.target : null;
      if (targetForm) {
        attachHandler(targetForm);
        // Re-dispatch submit so attached handler runs; prevent default here to avoid duplicate behavior
        // Note: handler attached above will handle the event because attachHandler registers before we return
      }
    });
    console.debug('[login-modal] delegated submit handler attached to modal container');
  } else {
    console.warn('[login-modal] modal content container not found; login handler not attached');
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?" ‚Äî –∏—â–µ–º –≤–Ω—É—Ç—Ä–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
  const forgotPasswordBtn = document.getElementById('forgot-password-btn') || (modalContent && modalContent.querySelector('#forgot-password-btn'));
  if (forgotPasswordBtn) {
    forgotPasswordBtn.addEventListener('click', () => {
      app.showForgotPasswordHelp();
    });
  }
}

/**
 * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–º–æ—â–∏ –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –ø–∞—Ä–æ–ª—è
 * @param {Object} app –≠–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
export function showForgotPasswordHelp(app) {
    const cfg = window.UI_CONFIG;
    const t = cfg?.texts?.password_recovery || {};
    const html = `
    <div class="form-container space-y-4">
      <div class="flex items-center justify-between">
        <div class="text-lg font-semibold">${t.title || 'üîí –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è'}</div>
        <button onclick="window.app.closeModal()" class="h-8 w-8 grid place-items-center rounded-lg border border-white/10 hover:bg-white/5">‚úï</button>
      </div>
      
      <div class="rounded-lg border border-amber-400/20 bg-amber-500/5 p-4">
        <div class="flex items-start gap-3">
          <div class="text-amber-400 text-xl">‚ÑπÔ∏è</div>
          <div class="flex-1">
            <div class="text-sm font-medium text-amber-200 mb-2">${t.how_to_recover || '–ö–∞–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ä—å –ø–∞—Ä–æ–ª—å?'}</div>
            <div class="text-xs text-white/80 space-y-2">
              <p>${t.instruction || '–î–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–∏—Å—Ç–µ–º—ã.'}</p>
              <p><strong>${t.what_to_tell || '–ß—Ç–æ —Å–æ–æ–±—â–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:'}:</strong></p>
              <ul class="list-disc list-inside text-xs space-y-1 ml-2">
                <li>${t.instructions?.username || '–í–∞—à –ª–æ–≥–∏–Ω (–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)'}</li>
                <li>${t.instructions?.problem || '–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã (–∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å)'}</li>
                <li>${t.instructions?.contact_info || '–ö–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Å–≤—è–∑–∏'}</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
      
      <div class="rounded-lg border border-blue-400/20 bg-blue-500/5 p-4">
        <div class="flex items-start gap-3">
          <div class="text-blue-400 text-xl">üë•</div>
          <div class="flex-1">
            <div class="text-sm font-medium text-blue-200 mb-2">${t.contacts_title || '–ö–æ–Ω—Ç–∞–∫—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏'}</div>
            <div class="text-xs text-white/80">
              <p>${t.contacts_text || '–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –≤–∞—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ IT-–ø–æ–¥–¥–µ—Ä–∂–∫–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è.'}</p>
            </div>
          </div>
        </div>
      </div>
      
      <div class="flex justify-between items-center pt-2">
        <button onclick="window.app.openLoginModal()" class="text-xs text-white/60 hover:text-white/80 underline">${t.buttons?.back_to_login || '‚Üê –ù–∞–∑–∞–¥ –∫ –≤—Ö–æ–¥—É'}</button>
        <button onclick="window.app.closeModal()" class="h-9 px-4 rounded-lg border border-white/10 hover:border-white/20 bg-white/5 text-sm">${t.buttons?.understood || '–ü–æ–Ω—è—Ç–Ω–æ'}</button>
      </div>
    </div>`;
    app.showModal(html);
}